<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
  <xqdoc:control>
    <xqdoc:date>2013-12-17T12:14:38.372+01:00</xqdoc:date>
    <xqdoc:version>1.1</xqdoc:version>
  </xqdoc:control>
  <xqdoc:module type="library">
    <xqdoc:uri>http://www.woerteler.de/xquery/modules/ordered-map/rbtree</xqdoc:uri>
    <xqdoc:name>rbtree.xqm</xqdoc:name>
    <xqdoc:comment>
      <xqdoc:description>Implementation of an ordered map based on a Red-Black Tree.</xqdoc:description>
      <xqdoc:author>Leo Woerteler &lt;leo@woerteler.de&gt;</xqdoc:author>
      <xqdoc:version>0.1</xqdoc:version>
      <xqdoc:custom tag="license">BSD 2-Clause License</xqdoc:custom>
    </xqdoc:comment>
  </xqdoc:module>
  <xqdoc:namespaces>
    <xqdoc:namespace prefix="rbtree" uri="http://www.woerteler.de/xquery/modules/ordered-map/rbtree"/>
    <xqdoc:namespace prefix="pair" uri="http://www.woerteler.de/xquery/modules/pair"/>
  </xqdoc:namespaces>
  <xqdoc:imports>
    <xqdoc:import type="library">
      <xqdoc:uri>http://www.woerteler.de/xquery/modules/pair</xqdoc:uri>
    </xqdoc:import>
  </xqdoc:imports>
  <xqdoc:variables/>
  <xqdoc:functions>
    <xqdoc:function arity="0">
      <xqdoc:comment>
        <xqdoc:description>The empty Red-Black Tree.</xqdoc:description>
        <xqdoc:return>the empty tree</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:empty</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="public"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %public function rbtree:empty() as item()*</xqdoc:signature>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Creates a branch node.</xqdoc:description>
        <xqdoc:param>$c color of the branch node</xqdoc:param>
        <xqdoc:param>$l left sub-tree</xqdoc:param>
        <xqdoc:param>$k key of the branch node</xqdoc:param>
        <xqdoc:param>$v value of the branch node</xqdoc:param>
        <xqdoc:param>$r right sub-tree</xqdoc:param>
        <xqdoc:return>branch node</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:branch</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:branch($c as item()*, $l as item()*, $k as item()*, $v as item()*, $r as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>c</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>l</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>r</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="1">
      <xqdoc:comment>
        <xqdoc:description>Returns the color of the given node.</xqdoc:description>
        <xqdoc:param>$tree node to find the color of</xqdoc:param>
        <xqdoc:return>the node's color</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:is-red</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:is-red($tree as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="4">
      <xqdoc:comment>
        <xqdoc:description>Creates a red branch node.</xqdoc:description>
        <xqdoc:param>$l left sub-tree</xqdoc:param>
        <xqdoc:param>$k key of the branch node</xqdoc:param>
        <xqdoc:param>$v value of the branch node</xqdoc:param>
        <xqdoc:param>$r right sub-tree</xqdoc:param>
        <xqdoc:return>branch node</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:red-branch</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:red-branch($l as item()*, $k as item()*, $v as item()*, $r as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>l</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>r</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="4">
      <xqdoc:comment>
        <xqdoc:description>Creates a black branch node.</xqdoc:description>
        <xqdoc:param>$l left sub-tree</xqdoc:param>
        <xqdoc:param>$k key of the branch node</xqdoc:param>
        <xqdoc:param>$v value of the branch node</xqdoc:param>
        <xqdoc:param>$r right sub-tree</xqdoc:param>
        <xqdoc:return>branch node</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:black-branch</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:black-branch($l as item()*, $k as item()*, $v as item()*, $r as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>l</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>r</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="1">
      <xqdoc:comment>
        <xqdoc:description>Returns an instance of the given node that is red.</xqdoc:description>
        <xqdoc:param>$tree tree to create a red version of</xqdoc:param>
        <xqdoc:return>red version of <code>$tree</code>
        </xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:make-red</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:make-red($tree as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="1">
      <xqdoc:comment>
        <xqdoc:description>Returns an instance of the given node that is black.</xqdoc:description>
        <xqdoc:param>$tree tree to create a black version of</xqdoc:param>
        <xqdoc:return>black version of <code>$tree</code>
        </xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:make-black</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:make-black($tree as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Searches for the given key in the given Red-Black Tree.</xqdoc:description>
        <xqdoc:param>$lt less-than predicate</xqdoc:param>
        <xqdoc:param>$tree Red-Black Tree</xqdoc:param>
        <xqdoc:param>$x key to look for</xqdoc:param>
        <xqdoc:param>$found callback taking the bound value when the key was found</xqdoc:param>
        <xqdoc:param>zero-argument callback that is called when the key was not found</xqdoc:param>
        <xqdoc:return>result of the callback</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:lookup</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="public"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %public function rbtree:lookup($lt as item()*, $tree as item()*, $x as item()*, $found as item()*, $notFound as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>lt</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>x</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>found</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>notFound</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="4">
      <xqdoc:comment>
        <xqdoc:description>Inserts the given entry into the given Read-Black Tree.</xqdoc:description>
        <xqdoc:param>$lt less-than predicate</xqdoc:param>
        <xqdoc:param>$root root node of the tree</xqdoc:param>
        <xqdoc:param>$k key of the entry to insert</xqdoc:param>
        <xqdoc:param>$v value of the entry to insert</xqdoc:param>
        <xqdoc:return>tree where the entry was inserted</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:insert</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="public"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %public function rbtree:insert($lt as item()*, $root as item()*, $k as item()*, $v as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>lt</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>root</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="4">
      <xqdoc:comment>
        <xqdoc:description>Recursively inserts the given entry into the given tree node.</xqdoc:description>
        <xqdoc:param>$lt less-than predicate</xqdoc:param>
        <xqdoc:param>$tree tree node</xqdoc:param>
        <xqdoc:param>$x key of the entry to insert</xqdoc:param>
        <xqdoc:param>$y value of the entry to insert</xqdoc:param>
        <xqdoc:return>node where the entry was inserted</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:ins</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:ins($lt as item()*, $tree as item()*, $x as item()*, $y as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>lt</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>x</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>y</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="3">
      <xqdoc:comment>
        <xqdoc:description>Deletes the given key from the given Red-Black Tree.</xqdoc:description>
        <xqdoc:param>$lt less-than predicate</xqdoc:param>
        <xqdoc:param>$root root node of the tree</xqdoc:param>
        <xqdoc:param>$k key to delete</xqdoc:param>
        <xqdoc:return>tree where the entry of <code>$k</code> was deleted</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:delete</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="public"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %public function rbtree:delete($lt as item()*, $root as item()*, $k as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>lt</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>root</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="3">
      <xqdoc:comment>
        <xqdoc:description>Recursively deletes the given key from the given tree node.</xqdoc:description>
        <xqdoc:param>$lt less-than predicate</xqdoc:param>
        <xqdoc:param>$tree tree node</xqdoc:param>
        <xqdoc:param>$x key to delete</xqdoc:param>
        <xqdoc:return>node where the key was deleted
        and a boolean indicating if it is double-black</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:del</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:del($lt as item()*, $tree as item()*, $x as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>lt</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>x</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Finds the leftmost (smallest) entry in the given tree and returns it
and the tree where the entry was deleted.</xqdoc:description>
        <xqdoc:param>$c color of the root node</xqdoc:param>
        <xqdoc:param>$l left sub-tree</xqdoc:param>
        <xqdoc:param>$k key of the root node</xqdoc:param>
        <xqdoc:param>$v value of the root node</xqdoc:param>
        <xqdoc:param>$r right sub-tree</xqdoc:param>
        <xqdoc:return>three-element sequence containing the removed entry as a pair,
        the tree with the entry deleted and a boolean indicating
        if it is double-black</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:split-leftmost</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:split-leftmost($c as item()*, $l as item()*, $k as item()*, $v as item()*, $r as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>c</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>l</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>r</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Propagates a double black node color upwards in the tree.</xqdoc:description>
        <xqdoc:param>$c boolean indicating if the root node is black</xqdoc:param>
        <xqdoc:param>$bbl double-black left child</xqdoc:param>
        <xqdoc:param>$k key of the root node</xqdoc:param>
        <xqdoc:param>$v value of the root node</xqdoc:param>
        <xqdoc:param>$r right child</xqdoc:param>
        <xqdoc:return>pair of the reconstructed tree and a boolean indicating if it is double-black</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:bubble-left</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:bubble-left($c as item()*, $bbl as item()*, $k as item()*, $v as item()*, $r as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>c</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>bbl</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>r</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Propagates a double black node color upwards in the tree.</xqdoc:description>
        <xqdoc:param>$c boolean indicating if the root node is black</xqdoc:param>
        <xqdoc:param>$l left child</xqdoc:param>
        <xqdoc:param>$k key of the root node</xqdoc:param>
        <xqdoc:param>$v value of the root node</xqdoc:param>
        <xqdoc:param>$bbr double-black right child</xqdoc:param>
        <xqdoc:return>pair of the reconstructed tree and a boolean indicating if it is double-black</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:bubble-right</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:bubble-right($c as item()*, $l as item()*, $k as item()*, $v as item()*, $bbr as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>c</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>l</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>bbr</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Rebalances the given node after a modification in the left sub-tree.</xqdoc:description>
        <xqdoc:param>$bb flag indicating if the root node is double-black</xqdoc:param>
        <xqdoc:param>$l left sub-tree</xqdoc:param>
        <xqdoc:param>$k key of the root node</xqdoc:param>
        <xqdoc:param>$v value of the root node</xqdoc:param>
        <xqdoc:param>$r right sub-tree</xqdoc:param>
        <xqdoc:return>rebalanced tree and a boolean indicating if it is double-black</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:balance-left</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:balance-left($bb as item()*, $l as item()*, $k as item()*, $v as item()*, $r as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>bb</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>l</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>r</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Rebalances the given node after a modification in the right sub-tree.</xqdoc:description>
        <xqdoc:param>$bb flag indicating if the root node is double-black</xqdoc:param>
        <xqdoc:param>$l left sub-tree</xqdoc:param>
        <xqdoc:param>$k key of the root node</xqdoc:param>
        <xqdoc:param>$v value of the root node</xqdoc:param>
        <xqdoc:param>$r right sub-tree</xqdoc:param>
        <xqdoc:return>rebalanced tree and a boolean indicating if it is double-black</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:balance-right</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="private"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %private function rbtree:balance-right($bb as item()*, $l as item()*, $k as item()*, $v as item()*, $r as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>bb</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>l</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>k</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>v</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>r</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="3">
      <xqdoc:comment>
        <xqdoc:description>Folds all entries of the given tree into one value in ascending order.</xqdoc:description>
        <xqdoc:param>$node current tree node</xqdoc:param>
        <xqdoc:param>$acc1 accumulator</xqdoc:param>
        <xqdoc:param>$f combining function</xqdoc:param>
        <xqdoc:return>folded value</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:fold</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="public"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %public function rbtree:fold($node as item()*, $acc1 as item()*, $f as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>node</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>acc1</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>f</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="5">
      <xqdoc:comment>
        <xqdoc:description>Checks the given tree node for invariant violations.</xqdoc:description>
        <xqdoc:param>$lt less-than predicate</xqdoc:param>
        <xqdoc:param>$tree current node</xqdoc:param>
        <xqdoc:param>$min key that is smaller than all keys in <code>$tree</code>
        </xqdoc:param>
        <xqdoc:param>$max key that is greater than all keys in <code>$tree</code>
        </xqdoc:param>
        <xqdoc:param>$msg error message to show when an invariant is violated</xqdoc:param>
        <xqdoc:return>black height of the tree</xqdoc:return>
        <xqdoc:error>rbtree:CHCK0001 if a key is smaller than <code>$min</code>
        </xqdoc:error>
        <xqdoc:error>rbtree:CHCK0002 if a key is greater than <code>$max</code>
        </xqdoc:error>
        <xqdoc:error>rbtree:CHCK0003 if a red node has a red child</xqdoc:error>
        <xqdoc:error>rbtree:CHCK0004 if the two sub-trees have different black heights</xqdoc:error>
      </xqdoc:comment>
      <xqdoc:name>rbtree:check</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="public"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %public function rbtree:check($lt as item()*, $tree as item()*, $min as item()*, $max as item()*, $msg as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>lt</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>min</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>max</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
        <xqdoc:parameter>
          <xqdoc:name>msg</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
    <xqdoc:function arity="1">
      <xqdoc:comment>
        <xqdoc:description>Returns an XML representation of the given tree's inner structure.</xqdoc:description>
        <xqdoc:param>$tree tree to show the structure of</xqdoc:param>
        <xqdoc:return>the tree's structure</xqdoc:return>
      </xqdoc:comment>
      <xqdoc:name>rbtree:to-xml</xqdoc:name>
      <xqdoc:annotations>
        <xqdoc:annotation name="public"/>
      </xqdoc:annotations>
      <xqdoc:signature>declare %public function rbtree:to-xml($tree as item()*) as item()*</xqdoc:signature>
      <xqdoc:parameters>
        <xqdoc:parameter>
          <xqdoc:name>tree</xqdoc:name>
          <xqdoc:type occurrence="*">item()</xqdoc:type>
        </xqdoc:parameter>
      </xqdoc:parameters>
      <xqdoc:return>
        <xqdoc:type occurrence="*">item()</xqdoc:type>
      </xqdoc:return>
    </xqdoc:function>
  </xqdoc:functions>
</xqdoc:xqdoc>